% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eplus-wrapper.R
\name{generate_idf}
\alias{generate_idf}
\title{Generates an EnergyPlus IDF file}
\usage{
generate_idf(idf, fixed_schedule = TRUE, resolution = "hourly", ...)
}
\arguments{
\item{idf}{ID for the IDF file.}

\item{fixed_schedule}{Logical indicating fixed schedules (TRUE) or
dynamic (FALSE).}

\item{resolution}{Character string specifying the simulation resolution.
Default is 'hourly'. It supports different formats, eg: hourly, hrr, h,
daily, ..., timestep (see \code{\link[=expand_output_resolution]{expand_output_resolution()}}).}
}
\value{
A list containing:
\itemize{
\item idf: The generated IDF file content as a character vector.
\item epw: Defined weather file (list).
\item sum: Generated summary card (JSON string).
}
}
\description{
This function populates an \if{html}{\out{<span style="color:pink">}}
EnergyPlus Input File (IDF)\if{html}{\out{</span>}} based on the provided ID
and various parameters. It includes sections for weather, location,
schedules, dimensions, loads, heat loop, and Low and zero carbon (LZC)
tech. Additionally---for enhanced data exchange, it creates a \code{JSON}
summary card and converts the \code{IDF} to \code{JSON}.
}
\examples{
\dontrun{
  check_external_dependencies(redefine = FALSE)
  init_project(core_data = 'ehs', core_mode = 'def', fresh_setup = TRUE)
  generate_idf(1, fixed_schedule = FALSE, resolution = 'h')
}
}
\seealso{
Other EnergyPlus evaluation: 
\code{\link{convert_idf_to_json}()},
\code{\link{extract_simulation_outputs}()},
\code{\link{generate_idf_multiple}()},
\code{\link{read_idf_outcomes}()},
\code{\link{read_input_file}()},
\code{\link{read_input_summary}()},
\code{\link{run_energy_plus}()},
\code{\link{simulate_available_idfs}()}
}
\concept{EnergyPlus evaluation}
